// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws/aws-controllers-k8s/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// LabelingJobSpec defines the desired state of LabelingJob
type LabelingJobSpec struct {
	HumanTaskConfig             *HumanTaskConfig               `json:"humanTaskConfig,omitempty"`
	InputConfig                 *LabelingJobInputConfig        `json:"inputConfig,omitempty"`
	LabelAttributeName          *string                        `json:"labelAttributeName,omitempty"`
	LabelCategoryConfigS3URI    *string                        `json:"labelCategoryConfigS3URI,omitempty"`
	LabelingJobAlgorithmsConfig *LabelingJobAlgorithmsConfig   `json:"labelingJobAlgorithmsConfig,omitempty"`
	LabelingJobName             *string                        `json:"labelingJobName,omitempty"`
	OutputConfig                *LabelingJobOutputConfig       `json:"outputConfig,omitempty"`
	RoleARN                     *string                        `json:"roleARN,omitempty"`
	StoppingConditions          *LabelingJobStoppingConditions `json:"stoppingConditions,omitempty"`
	Tags                        []*Tag                         `json:"tags,omitempty"`
}

// LabelingJobStatus defines the observed state of LabelingJob
type LabelingJobStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
}

// LabelingJob is the Schema for the LabelingJobs API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type LabelingJob struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LabelingJobSpec   `json:"spec,omitempty"`
	Status            LabelingJobStatus `json:"status,omitempty"`
}

// LabelingJobList contains a list of LabelingJob
// +kubebuilder:object:root=true
type LabelingJobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LabelingJob `json:"items"`
}

func init() {
	SchemeBuilder.Register(&LabelingJob{}, &LabelingJobList{})
}
