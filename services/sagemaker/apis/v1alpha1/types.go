// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type AlgorithmSpecification struct {
	AlgorithmName                    *string             `json:"algorithmName,omitempty"`
	EnableSageMakerMetricsTimeSeries *bool               `json:"enableSageMakerMetricsTimeSeries,omitempty"`
	MetricDefinitions                []*MetricDefinition `json:"metricDefinitions,omitempty"`
	TrainingImage                    *string             `json:"trainingImage,omitempty"`
	TrainingInputMode                *string             `json:"trainingInputMode,omitempty"`
}

type AlgorithmStatusDetails struct {
	ImageScanStatuses  []*AlgorithmStatusItem `json:"imageScanStatuses,omitempty"`
	ValidationStatuses []*AlgorithmStatusItem `json:"validationStatuses,omitempty"`
}

type AlgorithmStatusItem struct {
	FailureReason *string `json:"failureReason,omitempty"`
	Name          *string `json:"name,omitempty"`
	Status        *string `json:"status,omitempty"`
}

type AlgorithmSummary struct {
	AlgorithmARN         *string      `json:"algorithmARN,omitempty"`
	AlgorithmDescription *string      `json:"algorithmDescription,omitempty"`
	AlgorithmName        *string      `json:"algorithmName,omitempty"`
	AlgorithmStatus      *string      `json:"algorithmStatus,omitempty"`
	CreationTime         *metav1.Time `json:"creationTime,omitempty"`
}

type AlgorithmValidationProfile struct {
	ProfileName            *string                 `json:"profileName,omitempty"`
	TrainingJobDefinition  *TrainingJobDefinition  `json:"trainingJobDefinition,omitempty"`
	TransformJobDefinition *TransformJobDefinition `json:"transformJobDefinition,omitempty"`
}

type AlgorithmValidationSpecification struct {
	ValidationProfiles []*AlgorithmValidationProfile `json:"validationProfiles,omitempty"`
	ValidationRole     *string                       `json:"validationRole,omitempty"`
}

type AnnotationConsolidationConfig struct {
	AnnotationConsolidationLambdaARN *string `json:"annotationConsolidationLambdaARN,omitempty"`
}

type AppDetails struct {
	CreationTime    *metav1.Time `json:"creationTime,omitempty"`
	DomainID        *string      `json:"domainID,omitempty"`
	UserProfileName *string      `json:"userProfileName,omitempty"`
}

type AppSpecification struct {
	ContainerArguments  []*string `json:"containerArguments,omitempty"`
	ContainerEntrypoint []*string `json:"containerEntrypoint,omitempty"`
	ImageURI            *string   `json:"imageURI,omitempty"`
}

type AutoMLCandidate struct {
	CandidateName                 *string                        `json:"candidateName,omitempty"`
	CandidateStatus               *string                        `json:"candidateStatus,omitempty"`
	CandidateSteps                []*AutoMLCandidateStep         `json:"candidateSteps,omitempty"`
	CreationTime                  *metav1.Time                   `json:"creationTime,omitempty"`
	EndTime                       *metav1.Time                   `json:"endTime,omitempty"`
	FailureReason                 *string                        `json:"failureReason,omitempty"`
	FinalAutoMLJobObjectiveMetric *FinalAutoMLJobObjectiveMetric `json:"finalAutoMLJobObjectiveMetric,omitempty"`
	InferenceContainers           []*AutoMLContainerDefinition   `json:"inferenceContainers,omitempty"`
	LastModifiedTime              *metav1.Time                   `json:"lastModifiedTime,omitempty"`
	ObjectiveStatus               *string                        `json:"objectiveStatus,omitempty"`
}

type AutoMLCandidateStep struct {
	CandidateStepARN  *string `json:"candidateStepARN,omitempty"`
	CandidateStepName *string `json:"candidateStepName,omitempty"`
	CandidateStepType *string `json:"candidateStepType,omitempty"`
}

type AutoMLChannel struct {
	CompressionType     *string           `json:"compressionType,omitempty"`
	DataSource          *AutoMLDataSource `json:"dataSource,omitempty"`
	TargetAttributeName *string           `json:"targetAttributeName,omitempty"`
}

type AutoMLContainerDefinition struct {
	Environment  map[string]*string `json:"environment,omitempty"`
	Image        *string            `json:"image,omitempty"`
	ModelDataURL *string            `json:"modelDataURL,omitempty"`
}

type AutoMLDataSource struct {
	S3DataSource *AutoMLS3DataSource `json:"s3DataSource,omitempty"`
}

type AutoMLJobArtifacts struct {
	CandidateDefinitionNotebookLocation *string `json:"candidateDefinitionNotebookLocation,omitempty"`
	DataExplorationNotebookLocation     *string `json:"dataExplorationNotebookLocation,omitempty"`
}

type AutoMLJobCompletionCriteria struct {
	MaxAutoMLJobRuntimeInSeconds      *int64 `json:"maxAutoMLJobRuntimeInSeconds,omitempty"`
	MaxCandidates                     *int64 `json:"maxCandidates,omitempty"`
	MaxRuntimePerTrainingJobInSeconds *int64 `json:"maxRuntimePerTrainingJobInSeconds,omitempty"`
}

type AutoMLJobConfig struct {
	CompletionCriteria *AutoMLJobCompletionCriteria `json:"completionCriteria,omitempty"`
	SecurityConfig     *AutoMLSecurityConfig        `json:"securityConfig,omitempty"`
}

type AutoMLJobObjective struct {
	MetricName *string `json:"metricName,omitempty"`
}

type AutoMLJobSummary struct {
	AutoMLJobARN             *string      `json:"autoMLJobARN,omitempty"`
	AutoMLJobName            *string      `json:"autoMLJobName,omitempty"`
	AutoMLJobSecondaryStatus *string      `json:"autoMLJobSecondaryStatus,omitempty"`
	AutoMLJobStatus          *string      `json:"autoMLJobStatus,omitempty"`
	CreationTime             *metav1.Time `json:"creationTime,omitempty"`
	EndTime                  *metav1.Time `json:"endTime,omitempty"`
	FailureReason            *string      `json:"failureReason,omitempty"`
	LastModifiedTime         *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type AutoMLOutputDataConfig struct {
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type AutoMLS3DataSource struct {
	S3DataType *string `json:"s3DataType,omitempty"`
	S3URI      *string `json:"s3URI,omitempty"`
}

type AutoMLSecurityConfig struct {
	EnableInterContainerTrafficEncryption *bool      `json:"enableInterContainerTrafficEncryption,omitempty"`
	VolumeKMSKeyID                        *string    `json:"volumeKMSKeyID,omitempty"`
	VPCConfig                             *VPCConfig `json:"vpcConfig,omitempty"`
}

type CaptureContentTypeHeader struct {
	CsvContentTypes  []*string `json:"csvContentTypes,omitempty"`
	JSONContentTypes []*string `json:"jsonContentTypes,omitempty"`
}

type CaptureOption struct {
	CaptureMode *string `json:"captureMode,omitempty"`
}

type CategoricalParameterRange struct {
	Name   *string   `json:"name,omitempty"`
	Values []*string `json:"values,omitempty"`
}

type CategoricalParameterRangeSpecification struct {
	Values []*string `json:"values,omitempty"`
}

type Channel struct {
	ChannelName       *string        `json:"channelName,omitempty"`
	CompressionType   *string        `json:"compressionType,omitempty"`
	ContentType       *string        `json:"contentType,omitempty"`
	DataSource        *DataSource    `json:"dataSource,omitempty"`
	InputMode         *string        `json:"inputMode,omitempty"`
	RecordWrapperType *string        `json:"recordWrapperType,omitempty"`
	ShuffleConfig     *ShuffleConfig `json:"shuffleConfig,omitempty"`
}

type ChannelSpecification struct {
	Description               *string   `json:"description,omitempty"`
	IsRequired                *bool     `json:"isRequired,omitempty"`
	Name                      *string   `json:"name,omitempty"`
	SupportedCompressionTypes []*string `json:"supportedCompressionTypes,omitempty"`
	SupportedContentTypes     []*string `json:"supportedContentTypes,omitempty"`
	SupportedInputModes       []*string `json:"supportedInputModes,omitempty"`
}

type CheckpointConfig struct {
	LocalPath *string `json:"localPath,omitempty"`
	S3URI     *string `json:"s3URI,omitempty"`
}

type CodeRepositorySummary struct {
	CodeRepositoryARN  *string      `json:"codeRepositoryARN,omitempty"`
	CodeRepositoryName *string      `json:"codeRepositoryName,omitempty"`
	CreationTime       *metav1.Time `json:"creationTime,omitempty"`
	GitConfig          *GitConfig   `json:"gitConfig,omitempty"`
	LastModifiedTime   *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type CognitoConfig struct {
	ClientID *string `json:"clientID,omitempty"`
	UserPool *string `json:"userPool,omitempty"`
}

type CognitoMemberDefinition struct {
	ClientID  *string `json:"clientID,omitempty"`
	UserGroup *string `json:"userGroup,omitempty"`
	UserPool  *string `json:"userPool,omitempty"`
}

type CollectionConfiguration struct {
	CollectionName       *string            `json:"collectionName,omitempty"`
	CollectionParameters map[string]*string `json:"collectionParameters,omitempty"`
}

type CompilationJobSummary struct {
	CompilationEndTime                   *metav1.Time `json:"compilationEndTime,omitempty"`
	CompilationJobARN                    *string      `json:"compilationJobARN,omitempty"`
	CompilationJobName                   *string      `json:"compilationJobName,omitempty"`
	CompilationJobStatus                 *string      `json:"compilationJobStatus,omitempty"`
	CompilationStartTime                 *metav1.Time `json:"compilationStartTime,omitempty"`
	CompilationTargetDevice              *string      `json:"compilationTargetDevice,omitempty"`
	CompilationTargetPlatformAccelerator *string      `json:"compilationTargetPlatformAccelerator,omitempty"`
	CompilationTargetPlatformArch        *string      `json:"compilationTargetPlatformArch,omitempty"`
	CompilationTargetPlatformOs          *string      `json:"compilationTargetPlatformOs,omitempty"`
	CreationTime                         *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime                     *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type ContainerDefinition struct {
	ContainerHostname *string            `json:"containerHostname,omitempty"`
	Environment       map[string]*string `json:"environment,omitempty"`
	Image             *string            `json:"image,omitempty"`
	ImageConfig       *ImageConfig       `json:"imageConfig,omitempty"`
	Mode              *string            `json:"mode,omitempty"`
	ModelDataURL      *string            `json:"modelDataURL,omitempty"`
	ModelPackageName  *string            `json:"modelPackageName,omitempty"`
}

type ContinuousParameterRange struct {
	MaxValue    *string `json:"maxValue,omitempty"`
	MinValue    *string `json:"minValue,omitempty"`
	Name        *string `json:"name,omitempty"`
	ScalingType *string `json:"scalingType,omitempty"`
}

type ContinuousParameterRangeSpecification struct {
	MaxValue *string `json:"maxValue,omitempty"`
	MinValue *string `json:"minValue,omitempty"`
}

type DataCaptureConfig struct {
	CaptureContentTypeHeader  *CaptureContentTypeHeader `json:"captureContentTypeHeader,omitempty"`
	CaptureOptions            []*CaptureOption          `json:"captureOptions,omitempty"`
	DestinationS3URI          *string                   `json:"destinationS3URI,omitempty"`
	EnableCapture             *bool                     `json:"enableCapture,omitempty"`
	InitialSamplingPercentage *int64                    `json:"initialSamplingPercentage,omitempty"`
	KMSKeyID                  *string                   `json:"kmsKeyID,omitempty"`
}

type DataCaptureConfigSummary struct {
	CaptureStatus             *string `json:"captureStatus,omitempty"`
	CurrentSamplingPercentage *int64  `json:"currentSamplingPercentage,omitempty"`
	DestinationS3URI          *string `json:"destinationS3URI,omitempty"`
	EnableCapture             *bool   `json:"enableCapture,omitempty"`
	KMSKeyID                  *string `json:"kmsKeyID,omitempty"`
}

type DataProcessing struct {
	InputFilter  *string `json:"inputFilter,omitempty"`
	JoinSource   *string `json:"joinSource,omitempty"`
	OutputFilter *string `json:"outputFilter,omitempty"`
}

type DataSource struct {
	FileSystemDataSource *FileSystemDataSource `json:"fileSystemDataSource,omitempty"`
	S3DataSource         *S3DataSource         `json:"s3DataSource,omitempty"`
}

type DebugHookConfig struct {
	CollectionConfigurations []*CollectionConfiguration `json:"collectionConfigurations,omitempty"`
	HookParameters           map[string]*string         `json:"hookParameters,omitempty"`
	LocalPath                *string                    `json:"localPath,omitempty"`
	S3OutputPath             *string                    `json:"s3OutputPath,omitempty"`
}

type DebugRuleConfiguration struct {
	InstanceType          *string            `json:"instanceType,omitempty"`
	LocalPath             *string            `json:"localPath,omitempty"`
	RuleConfigurationName *string            `json:"ruleConfigurationName,omitempty"`
	RuleEvaluatorImage    *string            `json:"ruleEvaluatorImage,omitempty"`
	RuleParameters        map[string]*string `json:"ruleParameters,omitempty"`
	S3OutputPath          *string            `json:"s3OutputPath,omitempty"`
	VolumeSizeInGB        *int64             `json:"volumeSizeInGB,omitempty"`
}

type DebugRuleEvaluationStatus struct {
	LastModifiedTime      *metav1.Time `json:"lastModifiedTime,omitempty"`
	RuleConfigurationName *string      `json:"ruleConfigurationName,omitempty"`
	RuleEvaluationJobARN  *string      `json:"ruleEvaluationJobARN,omitempty"`
	RuleEvaluationStatus  *string      `json:"ruleEvaluationStatus,omitempty"`
	StatusDetails         *string      `json:"statusDetails,omitempty"`
}

type DeployedImage struct {
	ResolutionTime *metav1.Time `json:"resolutionTime,omitempty"`
	ResolvedImage  *string      `json:"resolvedImage,omitempty"`
	SpecifiedImage *string      `json:"specifiedImage,omitempty"`
}

type DesiredWeightAndCapacity struct {
	DesiredInstanceCount *int64   `json:"desiredInstanceCount,omitempty"`
	DesiredWeight        *float64 `json:"desiredWeight,omitempty"`
	VariantName          *string  `json:"variantName,omitempty"`
}

type DomainDetails struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	DomainID         *string      `json:"domainID,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type EndpointConfigSummary struct {
	CreationTime       *metav1.Time `json:"creationTime,omitempty"`
	EndpointConfigARN  *string      `json:"endpointConfigARN,omitempty"`
	EndpointConfigName *string      `json:"endpointConfigName,omitempty"`
}

type EndpointInput struct {
	EndpointName           *string `json:"endpointName,omitempty"`
	LocalPath              *string `json:"localPath,omitempty"`
	S3DataDistributionType *string `json:"s3DataDistributionType,omitempty"`
	S3InputMode            *string `json:"s3InputMode,omitempty"`
}

type EndpointSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	EndpointARN      *string      `json:"endpointARN,omitempty"`
	EndpointName     *string      `json:"endpointName,omitempty"`
	EndpointStatus   *string      `json:"endpointStatus,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type ExperimentConfig struct {
	ExperimentName            *string `json:"experimentName,omitempty"`
	TrialComponentDisplayName *string `json:"trialComponentDisplayName,omitempty"`
	TrialName                 *string `json:"trialName,omitempty"`
}

type ExperimentSource struct {
	SourceARN  *string `json:"sourceARN,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
}

type ExperimentSummary struct {
	CreationTime     *metav1.Time      `json:"creationTime,omitempty"`
	DisplayName      *string           `json:"displayName,omitempty"`
	ExperimentARN    *string           `json:"experimentARN,omitempty"`
	ExperimentName   *string           `json:"experimentName,omitempty"`
	ExperimentSource *ExperimentSource `json:"experimentSource,omitempty"`
	LastModifiedTime *metav1.Time      `json:"lastModifiedTime,omitempty"`
}

type Experiment_SDK struct {
	CreatedBy        *UserContext      `json:"createdBy,omitempty"`
	CreationTime     *metav1.Time      `json:"creationTime,omitempty"`
	Description      *string           `json:"description,omitempty"`
	DisplayName      *string           `json:"displayName,omitempty"`
	ExperimentARN    *string           `json:"experimentARN,omitempty"`
	ExperimentName   *string           `json:"experimentName,omitempty"`
	LastModifiedBy   *UserContext      `json:"lastModifiedBy,omitempty"`
	LastModifiedTime *metav1.Time      `json:"lastModifiedTime,omitempty"`
	Source           *ExperimentSource `json:"source,omitempty"`
	Tags             []*Tag            `json:"tags,omitempty"`
}

type FileSystemDataSource struct {
	DirectoryPath        *string `json:"directoryPath,omitempty"`
	FileSystemAccessMode *string `json:"fileSystemAccessMode,omitempty"`
	FileSystemID         *string `json:"fileSystemID,omitempty"`
	FileSystemType       *string `json:"fileSystemType,omitempty"`
}

type FinalAutoMLJobObjectiveMetric struct {
	MetricName *string  `json:"metricName,omitempty"`
	Type       *string  `json:"type,omitempty"`
	Value      *float64 `json:"value,omitempty"`
}

type FinalHyperParameterTuningJobObjectiveMetric struct {
	MetricName *string  `json:"metricName,omitempty"`
	Type       *string  `json:"type,omitempty"`
	Value      *float64 `json:"value,omitempty"`
}

type FlowDefinitionOutputConfig struct {
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type FlowDefinitionSummary struct {
	CreationTime  *metav1.Time `json:"creationTime,omitempty"`
	FailureReason *string      `json:"failureReason,omitempty"`
}

type GitConfig struct {
	Branch        *string `json:"branch,omitempty"`
	RepositoryURL *string `json:"repositoryURL,omitempty"`
	SecretARN     *string `json:"secretARN,omitempty"`
}

type GitConfigForUpdate struct {
	SecretARN *string `json:"secretARN,omitempty"`
}

type HumanLoopConfig struct {
	HumanTaskUiARN           *string                   `json:"humanTaskUiARN,omitempty"`
	PublicWorkforceTaskPrice *PublicWorkforceTaskPrice `json:"publicWorkforceTaskPrice,omitempty"`
	WorkteamARN              *string                   `json:"workteamARN,omitempty"`
}

type HumanTaskConfig struct {
	AnnotationConsolidationConfig     *AnnotationConsolidationConfig `json:"annotationConsolidationConfig,omitempty"`
	MaxConcurrentTaskCount            *int64                         `json:"maxConcurrentTaskCount,omitempty"`
	NumberOfHumanWorkersPerDataObject *int64                         `json:"numberOfHumanWorkersPerDataObject,omitempty"`
	PreHumanTaskLambdaARN             *string                        `json:"preHumanTaskLambdaARN,omitempty"`
	PublicWorkforceTaskPrice          *PublicWorkforceTaskPrice      `json:"publicWorkforceTaskPrice,omitempty"`
	TaskAvailabilityLifetimeInSeconds *int64                         `json:"taskAvailabilityLifetimeInSeconds,omitempty"`
	TaskDescription                   *string                        `json:"taskDescription,omitempty"`
	TaskKeywords                      []*string                      `json:"taskKeywords,omitempty"`
	TaskTimeLimitInSeconds            *int64                         `json:"taskTimeLimitInSeconds,omitempty"`
	TaskTitle                         *string                        `json:"taskTitle,omitempty"`
	UiConfig                          *UiConfig                      `json:"uiConfig,omitempty"`
	WorkteamARN                       *string                        `json:"workteamARN,omitempty"`
}

type HumanTaskUiSummary struct {
	CreationTime    *metav1.Time `json:"creationTime,omitempty"`
	HumanTaskUiARN  *string      `json:"humanTaskUiARN,omitempty"`
	HumanTaskUiName *string      `json:"humanTaskUiName,omitempty"`
}

type HyperParameterAlgorithmSpecification struct {
	AlgorithmName     *string             `json:"algorithmName,omitempty"`
	MetricDefinitions []*MetricDefinition `json:"metricDefinitions,omitempty"`
	TrainingImage     *string             `json:"trainingImage,omitempty"`
	TrainingInputMode *string             `json:"trainingInputMode,omitempty"`
}

type HyperParameterSpecification struct {
	DefaultValue *string         `json:"defaultValue,omitempty"`
	Description  *string         `json:"description,omitempty"`
	IsRequired   *bool           `json:"isRequired,omitempty"`
	IsTunable    *bool           `json:"isTunable,omitempty"`
	Name         *string         `json:"name,omitempty"`
	Range        *ParameterRange `json:"range,omitempty"`
	Type         *string         `json:"type,omitempty"`
}

type HyperParameterTrainingJobDefinition struct {
	AlgorithmSpecification                *HyperParameterAlgorithmSpecification `json:"algorithmSpecification,omitempty"`
	CheckpointConfig                      *CheckpointConfig                     `json:"checkpointConfig,omitempty"`
	DefinitionName                        *string                               `json:"definitionName,omitempty"`
	EnableInterContainerTrafficEncryption *bool                                 `json:"enableInterContainerTrafficEncryption,omitempty"`
	EnableManagedSpotTraining             *bool                                 `json:"enableManagedSpotTraining,omitempty"`
	EnableNetworkIsolation                *bool                                 `json:"enableNetworkIsolation,omitempty"`
	HyperParameterRanges                  *ParameterRanges                      `json:"hyperParameterRanges,omitempty"`
	InputDataConfig                       []*Channel                            `json:"inputDataConfig,omitempty"`
	OutputDataConfig                      *OutputDataConfig                     `json:"outputDataConfig,omitempty"`
	ResourceConfig                        *ResourceConfig                       `json:"resourceConfig,omitempty"`
	RoleARN                               *string                               `json:"roleARN,omitempty"`
	StaticHyperParameters                 map[string]*string                    `json:"staticHyperParameters,omitempty"`
	StoppingCondition                     *StoppingCondition                    `json:"stoppingCondition,omitempty"`
	TuningObjective                       *HyperParameterTuningJobObjective     `json:"tuningObjective,omitempty"`
	VPCConfig                             *VPCConfig                            `json:"vpcConfig,omitempty"`
}

type HyperParameterTrainingJobSummary struct {
	CreationTime                                *metav1.Time                                 `json:"creationTime,omitempty"`
	FailureReason                               *string                                      `json:"failureReason,omitempty"`
	FinalHyperParameterTuningJobObjectiveMetric *FinalHyperParameterTuningJobObjectiveMetric `json:"finalHyperParameterTuningJobObjectiveMetric,omitempty"`
	ObjectiveStatus                             *string                                      `json:"objectiveStatus,omitempty"`
	TrainingEndTime                             *metav1.Time                                 `json:"trainingEndTime,omitempty"`
	TrainingJobARN                              *string                                      `json:"trainingJobARN,omitempty"`
	TrainingJobDefinitionName                   *string                                      `json:"trainingJobDefinitionName,omitempty"`
	TrainingJobName                             *string                                      `json:"trainingJobName,omitempty"`
	TrainingJobStatus                           *string                                      `json:"trainingJobStatus,omitempty"`
	TrainingStartTime                           *metav1.Time                                 `json:"trainingStartTime,omitempty"`
	TunedHyperParameters                        map[string]*string                           `json:"tunedHyperParameters,omitempty"`
	TuningJobName                               *string                                      `json:"tuningJobName,omitempty"`
}

type HyperParameterTuningJobConfig struct {
	HyperParameterTuningJobObjective *HyperParameterTuningJobObjective `json:"hyperParameterTuningJobObjective,omitempty"`
	ParameterRanges                  *ParameterRanges                  `json:"parameterRanges,omitempty"`
	ResourceLimits                   *ResourceLimits                   `json:"resourceLimits,omitempty"`
	Strategy                         *string                           `json:"strategy,omitempty"`
	TrainingJobEarlyStoppingType     *string                           `json:"trainingJobEarlyStoppingType,omitempty"`
	TuningJobCompletionCriteria      *TuningJobCompletionCriteria      `json:"tuningJobCompletionCriteria,omitempty"`
}

type HyperParameterTuningJobObjective struct {
	MetricName *string `json:"metricName,omitempty"`
	Type       *string `json:"type,omitempty"`
}

type HyperParameterTuningJobSummary struct {
	CreationTime                  *metav1.Time               `json:"creationTime,omitempty"`
	HyperParameterTuningEndTime   *metav1.Time               `json:"hyperParameterTuningEndTime,omitempty"`
	HyperParameterTuningJobARN    *string                    `json:"hyperParameterTuningJobARN,omitempty"`
	HyperParameterTuningJobName   *string                    `json:"hyperParameterTuningJobName,omitempty"`
	HyperParameterTuningJobStatus *string                    `json:"hyperParameterTuningJobStatus,omitempty"`
	LastModifiedTime              *metav1.Time               `json:"lastModifiedTime,omitempty"`
	ObjectiveStatusCounters       *ObjectiveStatusCounters   `json:"objectiveStatusCounters,omitempty"`
	ResourceLimits                *ResourceLimits            `json:"resourceLimits,omitempty"`
	Strategy                      *string                    `json:"strategy,omitempty"`
	TrainingJobStatusCounters     *TrainingJobStatusCounters `json:"trainingJobStatusCounters,omitempty"`
}

type HyperParameterTuningJobWarmStartConfig struct {
	ParentHyperParameterTuningJobs []*ParentHyperParameterTuningJob `json:"parentHyperParameterTuningJobs,omitempty"`
	WarmStartType                  *string                          `json:"warmStartType,omitempty"`
}

type ImageConfig struct {
	RepositoryAccessMode *string `json:"repositoryAccessMode,omitempty"`
}

type InferenceSpecification struct {
	Containers                              []*ModelPackageContainerDefinition `json:"containers,omitempty"`
	SupportedContentTypes                   []*string                          `json:"supportedContentTypes,omitempty"`
	SupportedRealtimeInferenceInstanceTypes []*string                          `json:"supportedRealtimeInferenceInstanceTypes,omitempty"`
	SupportedResponseMIMETypes              []*string                          `json:"supportedResponseMIMETypes,omitempty"`
	SupportedTransformInstanceTypes         []*string                          `json:"supportedTransformInstanceTypes,omitempty"`
}

type InputConfig struct {
	DataInputConfig *string `json:"dataInputConfig,omitempty"`
	Framework       *string `json:"framework,omitempty"`
	S3URI           *string `json:"s3URI,omitempty"`
}

type IntegerParameterRange struct {
	MaxValue    *string `json:"maxValue,omitempty"`
	MinValue    *string `json:"minValue,omitempty"`
	Name        *string `json:"name,omitempty"`
	ScalingType *string `json:"scalingType,omitempty"`
}

type IntegerParameterRangeSpecification struct {
	MaxValue *string `json:"maxValue,omitempty"`
	MinValue *string `json:"minValue,omitempty"`
}

type JupyterServerAppSettings struct {
	DefaultResourceSpec *ResourceSpec `json:"defaultResourceSpec,omitempty"`
}

type KernelGatewayAppSettings struct {
	DefaultResourceSpec *ResourceSpec `json:"defaultResourceSpec,omitempty"`
}

type LabelCounters struct {
	FailedNonRetryableError *int64 `json:"failedNonRetryableError,omitempty"`
	HumanLabeled            *int64 `json:"humanLabeled,omitempty"`
	MachineLabeled          *int64 `json:"machineLabeled,omitempty"`
	TotalLabeled            *int64 `json:"totalLabeled,omitempty"`
	Unlabeled               *int64 `json:"unlabeled,omitempty"`
}

type LabelCountersForWorkteam struct {
	HumanLabeled *int64 `json:"humanLabeled,omitempty"`
	PendingHuman *int64 `json:"pendingHuman,omitempty"`
	Total        *int64 `json:"total,omitempty"`
}

type LabelingJobAlgorithmsConfig struct {
	InitialActiveLearningModelARN        *string                    `json:"initialActiveLearningModelARN,omitempty"`
	LabelingJobAlgorithmSpecificationARN *string                    `json:"labelingJobAlgorithmSpecificationARN,omitempty"`
	LabelingJobResourceConfig            *LabelingJobResourceConfig `json:"labelingJobResourceConfig,omitempty"`
}

type LabelingJobDataAttributes struct {
	ContentClassifiers []*string `json:"contentClassifiers,omitempty"`
}

type LabelingJobDataSource struct {
	S3DataSource  *LabelingJobS3DataSource  `json:"s3DataSource,omitempty"`
	SnsDataSource *LabelingJobSnsDataSource `json:"snsDataSource,omitempty"`
}

type LabelingJobForWorkteamSummary struct {
	CreationTime                      *metav1.Time `json:"creationTime,omitempty"`
	JobReferenceCode                  *string      `json:"jobReferenceCode,omitempty"`
	LabelingJobName                   *string      `json:"labelingJobName,omitempty"`
	NumberOfHumanWorkersPerDataObject *int64       `json:"numberOfHumanWorkersPerDataObject,omitempty"`
}

type LabelingJobInputConfig struct {
	DataAttributes *LabelingJobDataAttributes `json:"dataAttributes,omitempty"`
	DataSource     *LabelingJobDataSource     `json:"dataSource,omitempty"`
}

type LabelingJobOutput struct {
	FinalActiveLearningModelARN *string `json:"finalActiveLearningModelARN,omitempty"`
	OutputDatasetS3URI          *string `json:"outputDatasetS3URI,omitempty"`
}

type LabelingJobOutputConfig struct {
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
	SnsTopicARN  *string `json:"snsTopicARN,omitempty"`
}

type LabelingJobResourceConfig struct {
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
}

type LabelingJobS3DataSource struct {
	ManifestS3URI *string `json:"manifestS3URI,omitempty"`
}

type LabelingJobSnsDataSource struct {
	SnsTopicARN *string `json:"snsTopicARN,omitempty"`
}

type LabelingJobStoppingConditions struct {
	MaxHumanLabeledObjectCount         *int64 `json:"maxHumanLabeledObjectCount,omitempty"`
	MaxPercentageOfInputDatasetLabeled *int64 `json:"maxPercentageOfInputDatasetLabeled,omitempty"`
}

type LabelingJobSummary struct {
	AnnotationConsolidationLambdaARN *string                 `json:"annotationConsolidationLambdaARN,omitempty"`
	CreationTime                     *metav1.Time            `json:"creationTime,omitempty"`
	FailureReason                    *string                 `json:"failureReason,omitempty"`
	InputConfig                      *LabelingJobInputConfig `json:"inputConfig,omitempty"`
	LabelCounters                    *LabelCounters          `json:"labelCounters,omitempty"`
	LabelingJobARN                   *string                 `json:"labelingJobARN,omitempty"`
	LabelingJobName                  *string                 `json:"labelingJobName,omitempty"`
	LabelingJobOutput                *LabelingJobOutput      `json:"labelingJobOutput,omitempty"`
	LabelingJobStatus                *string                 `json:"labelingJobStatus,omitempty"`
	LastModifiedTime                 *metav1.Time            `json:"lastModifiedTime,omitempty"`
	PreHumanTaskLambdaARN            *string                 `json:"preHumanTaskLambdaARN,omitempty"`
	WorkteamARN                      *string                 `json:"workteamARN,omitempty"`
}

type MemberDefinition struct {
	CognitoMemberDefinition *CognitoMemberDefinition `json:"cognitoMemberDefinition,omitempty"`
	OidcMemberDefinition    *OidcMemberDefinition    `json:"oidcMemberDefinition,omitempty"`
}

type MetricData struct {
	MetricName *string      `json:"metricName,omitempty"`
	Timestamp  *metav1.Time `json:"timestamp,omitempty"`
	Value      *float64     `json:"value,omitempty"`
}

type MetricDefinition struct {
	Name  *string `json:"name,omitempty"`
	Regex *string `json:"regex,omitempty"`
}

type ModelArtifacts struct {
	S3ModelArtifacts *string `json:"s3ModelArtifacts,omitempty"`
}

type ModelClientConfig struct {
	InvocationsMaxRetries       *int64 `json:"invocationsMaxRetries,omitempty"`
	InvocationsTimeoutInSeconds *int64 `json:"invocationsTimeoutInSeconds,omitempty"`
}

type ModelPackageContainerDefinition struct {
	ContainerHostname *string `json:"containerHostname,omitempty"`
	Image             *string `json:"image,omitempty"`
	ImageDigest       *string `json:"imageDigest,omitempty"`
	ModelDataURL      *string `json:"modelDataURL,omitempty"`
	ProductID         *string `json:"productID,omitempty"`
}

type ModelPackageStatusDetails struct {
	ImageScanStatuses  []*ModelPackageStatusItem `json:"imageScanStatuses,omitempty"`
	ValidationStatuses []*ModelPackageStatusItem `json:"validationStatuses,omitempty"`
}

type ModelPackageStatusItem struct {
	FailureReason *string `json:"failureReason,omitempty"`
	Name          *string `json:"name,omitempty"`
	Status        *string `json:"status,omitempty"`
}

type ModelPackageSummary struct {
	CreationTime            *metav1.Time `json:"creationTime,omitempty"`
	ModelPackageARN         *string      `json:"modelPackageARN,omitempty"`
	ModelPackageDescription *string      `json:"modelPackageDescription,omitempty"`
	ModelPackageName        *string      `json:"modelPackageName,omitempty"`
	ModelPackageStatus      *string      `json:"modelPackageStatus,omitempty"`
}

type ModelPackageValidationProfile struct {
	ProfileName            *string                 `json:"profileName,omitempty"`
	TransformJobDefinition *TransformJobDefinition `json:"transformJobDefinition,omitempty"`
}

type ModelPackageValidationSpecification struct {
	ValidationProfiles []*ModelPackageValidationProfile `json:"validationProfiles,omitempty"`
	ValidationRole     *string                          `json:"validationRole,omitempty"`
}

type ModelSummary struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
	ModelARN     *string      `json:"modelARN,omitempty"`
	ModelName    *string      `json:"modelName,omitempty"`
}

type MonitoringAppSpecification struct {
	ContainerArguments              []*string `json:"containerArguments,omitempty"`
	ContainerEntrypoint             []*string `json:"containerEntrypoint,omitempty"`
	ImageURI                        *string   `json:"imageURI,omitempty"`
	PostAnalyticsProcessorSourceURI *string   `json:"postAnalyticsProcessorSourceURI,omitempty"`
	RecordPreprocessorSourceURI     *string   `json:"recordPreprocessorSourceURI,omitempty"`
}

type MonitoringBaselineConfig struct {
	ConstraintsResource *MonitoringConstraintsResource `json:"constraintsResource,omitempty"`
	StatisticsResource  *MonitoringStatisticsResource  `json:"statisticsResource,omitempty"`
}

type MonitoringClusterConfig struct {
	InstanceCount  *int64  `json:"instanceCount,omitempty"`
	InstanceType   *string `json:"instanceType,omitempty"`
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
	VolumeSizeInGB *int64  `json:"volumeSizeInGB,omitempty"`
}

type MonitoringConstraintsResource struct {
	S3URI *string `json:"s3URI,omitempty"`
}

type MonitoringExecutionSummary struct {
	CreationTime              *metav1.Time `json:"creationTime,omitempty"`
	EndpointName              *string      `json:"endpointName,omitempty"`
	FailureReason             *string      `json:"failureReason,omitempty"`
	LastModifiedTime          *metav1.Time `json:"lastModifiedTime,omitempty"`
	MonitoringExecutionStatus *string      `json:"monitoringExecutionStatus,omitempty"`
	MonitoringScheduleName    *string      `json:"monitoringScheduleName,omitempty"`
	ProcessingJobARN          *string      `json:"processingJobARN,omitempty"`
	ScheduledTime             *metav1.Time `json:"scheduledTime,omitempty"`
}

type MonitoringInput struct {
	EndpointInput *EndpointInput `json:"endpointInput,omitempty"`
}

type MonitoringJobDefinition struct {
	BaselineConfig             *MonitoringBaselineConfig    `json:"baselineConfig,omitempty"`
	Environment                map[string]*string           `json:"environment,omitempty"`
	MonitoringAppSpecification *MonitoringAppSpecification  `json:"monitoringAppSpecification,omitempty"`
	MonitoringInputs           []*MonitoringInput           `json:"monitoringInputs,omitempty"`
	MonitoringOutputConfig     *MonitoringOutputConfig      `json:"monitoringOutputConfig,omitempty"`
	MonitoringResources        *MonitoringResources         `json:"monitoringResources,omitempty"`
	NetworkConfig              *NetworkConfig               `json:"networkConfig,omitempty"`
	RoleARN                    *string                      `json:"roleARN,omitempty"`
	StoppingCondition          *MonitoringStoppingCondition `json:"stoppingCondition,omitempty"`
}

type MonitoringOutput struct {
	S3Output *MonitoringS3Output `json:"s3Output,omitempty"`
}

type MonitoringOutputConfig struct {
	KMSKeyID          *string             `json:"kmsKeyID,omitempty"`
	MonitoringOutputs []*MonitoringOutput `json:"monitoringOutputs,omitempty"`
}

type MonitoringResources struct {
	ClusterConfig *MonitoringClusterConfig `json:"clusterConfig,omitempty"`
}

type MonitoringS3Output struct {
	LocalPath    *string `json:"localPath,omitempty"`
	S3UploadMode *string `json:"s3UploadMode,omitempty"`
	S3URI        *string `json:"s3URI,omitempty"`
}

type MonitoringScheduleConfig struct {
	MonitoringJobDefinition *MonitoringJobDefinition `json:"monitoringJobDefinition,omitempty"`
	ScheduleConfig          *ScheduleConfig          `json:"scheduleConfig,omitempty"`
}

type MonitoringScheduleSummary struct {
	CreationTime             *metav1.Time `json:"creationTime,omitempty"`
	EndpointName             *string      `json:"endpointName,omitempty"`
	LastModifiedTime         *metav1.Time `json:"lastModifiedTime,omitempty"`
	MonitoringScheduleARN    *string      `json:"monitoringScheduleARN,omitempty"`
	MonitoringScheduleName   *string      `json:"monitoringScheduleName,omitempty"`
	MonitoringScheduleStatus *string      `json:"monitoringScheduleStatus,omitempty"`
}

type MonitoringStatisticsResource struct {
	S3URI *string `json:"s3URI,omitempty"`
}

type MonitoringStoppingCondition struct {
	MaxRuntimeInSeconds *int64 `json:"maxRuntimeInSeconds,omitempty"`
}

type NetworkConfig struct {
	EnableInterContainerTrafficEncryption *bool      `json:"enableInterContainerTrafficEncryption,omitempty"`
	EnableNetworkIsolation                *bool      `json:"enableNetworkIsolation,omitempty"`
	VPCConfig                             *VPCConfig `json:"vpcConfig,omitempty"`
}

type NotebookInstanceLifecycleConfigSummary struct {
	CreationTime                        *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime                    *metav1.Time `json:"lastModifiedTime,omitempty"`
	NotebookInstanceLifecycleConfigARN  *string      `json:"notebookInstanceLifecycleConfigARN,omitempty"`
	NotebookInstanceLifecycleConfigName *string      `json:"notebookInstanceLifecycleConfigName,omitempty"`
}

type NotebookInstanceLifecycleHook struct {
	Content *string `json:"content,omitempty"`
}

type NotebookInstanceSummary struct {
	AdditionalCodeRepositories          []*string    `json:"additionalCodeRepositories,omitempty"`
	CreationTime                        *metav1.Time `json:"creationTime,omitempty"`
	DefaultCodeRepository               *string      `json:"defaultCodeRepository,omitempty"`
	InstanceType                        *string      `json:"instanceType,omitempty"`
	LastModifiedTime                    *metav1.Time `json:"lastModifiedTime,omitempty"`
	NotebookInstanceARN                 *string      `json:"notebookInstanceARN,omitempty"`
	NotebookInstanceLifecycleConfigName *string      `json:"notebookInstanceLifecycleConfigName,omitempty"`
	NotebookInstanceName                *string      `json:"notebookInstanceName,omitempty"`
	NotebookInstanceStatus              *string      `json:"notebookInstanceStatus,omitempty"`
	URL                                 *string      `json:"url,omitempty"`
}

type NotificationConfiguration struct {
	NotificationTopicARN *string `json:"notificationTopicARN,omitempty"`
}

type ObjectiveStatusCounters struct {
	Failed    *int64 `json:"failed,omitempty"`
	Pending   *int64 `json:"pending,omitempty"`
	Succeeded *int64 `json:"succeeded,omitempty"`
}

type OidcConfig struct {
	AuthorizationEndpoint *string `json:"authorizationEndpoint,omitempty"`
	ClientID              *string `json:"clientID,omitempty"`
	ClientSecret          *string `json:"clientSecret,omitempty"`
	Issuer                *string `json:"issuer,omitempty"`
	JwksURI               *string `json:"jwksURI,omitempty"`
	LogoutEndpoint        *string `json:"logoutEndpoint,omitempty"`
	TokenEndpoint         *string `json:"tokenEndpoint,omitempty"`
	UserInfoEndpoint      *string `json:"userInfoEndpoint,omitempty"`
}

type OidcConfigForResponse struct {
	AuthorizationEndpoint *string `json:"authorizationEndpoint,omitempty"`
	ClientID              *string `json:"clientID,omitempty"`
	Issuer                *string `json:"issuer,omitempty"`
	JwksURI               *string `json:"jwksURI,omitempty"`
	LogoutEndpoint        *string `json:"logoutEndpoint,omitempty"`
	TokenEndpoint         *string `json:"tokenEndpoint,omitempty"`
	UserInfoEndpoint      *string `json:"userInfoEndpoint,omitempty"`
}

type OidcMemberDefinition struct {
	Groups []*string `json:"groups,omitempty"`
}

type OutputConfig struct {
	CompilerOptions  *string         `json:"compilerOptions,omitempty"`
	S3OutputLocation *string         `json:"s3OutputLocation,omitempty"`
	TargetDevice     *string         `json:"targetDevice,omitempty"`
	TargetPlatform   *TargetPlatform `json:"targetPlatform,omitempty"`
}

type OutputDataConfig struct {
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type ParameterRange struct {
	CategoricalParameterRangeSpecification *CategoricalParameterRangeSpecification `json:"categoricalParameterRangeSpecification,omitempty"`
	ContinuousParameterRangeSpecification  *ContinuousParameterRangeSpecification  `json:"continuousParameterRangeSpecification,omitempty"`
	IntegerParameterRangeSpecification     *IntegerParameterRangeSpecification     `json:"integerParameterRangeSpecification,omitempty"`
}

type ParameterRanges struct {
	CategoricalParameterRanges []*CategoricalParameterRange `json:"categoricalParameterRanges,omitempty"`
	ContinuousParameterRanges  []*ContinuousParameterRange  `json:"continuousParameterRanges,omitempty"`
	IntegerParameterRanges     []*IntegerParameterRange     `json:"integerParameterRanges,omitempty"`
}

type Parent struct {
	ExperimentName *string `json:"experimentName,omitempty"`
	TrialName      *string `json:"trialName,omitempty"`
}

type ParentHyperParameterTuningJob struct {
	HyperParameterTuningJobName *string `json:"hyperParameterTuningJobName,omitempty"`
}

type ProcessingClusterConfig struct {
	InstanceCount  *int64  `json:"instanceCount,omitempty"`
	InstanceType   *string `json:"instanceType,omitempty"`
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
	VolumeSizeInGB *int64  `json:"volumeSizeInGB,omitempty"`
}

type ProcessingInput struct {
	InputName *string            `json:"inputName,omitempty"`
	S3Input   *ProcessingS3Input `json:"s3Input,omitempty"`
}

type ProcessingJobSummary struct {
	CreationTime        *metav1.Time `json:"creationTime,omitempty"`
	ExitMessage         *string      `json:"exitMessage,omitempty"`
	FailureReason       *string      `json:"failureReason,omitempty"`
	LastModifiedTime    *metav1.Time `json:"lastModifiedTime,omitempty"`
	ProcessingEndTime   *metav1.Time `json:"processingEndTime,omitempty"`
	ProcessingJobARN    *string      `json:"processingJobARN,omitempty"`
	ProcessingJobName   *string      `json:"processingJobName,omitempty"`
	ProcessingJobStatus *string      `json:"processingJobStatus,omitempty"`
}

type ProcessingJob_SDK struct {
	AppSpecification       *AppSpecification            `json:"appSpecification,omitempty"`
	AutoMLJobARN           *string                      `json:"autoMLJobARN,omitempty"`
	CreationTime           *metav1.Time                 `json:"creationTime,omitempty"`
	Environment            map[string]*string           `json:"environment,omitempty"`
	ExitMessage            *string                      `json:"exitMessage,omitempty"`
	ExperimentConfig       *ExperimentConfig            `json:"experimentConfig,omitempty"`
	FailureReason          *string                      `json:"failureReason,omitempty"`
	LastModifiedTime       *metav1.Time                 `json:"lastModifiedTime,omitempty"`
	MonitoringScheduleARN  *string                      `json:"monitoringScheduleARN,omitempty"`
	NetworkConfig          *NetworkConfig               `json:"networkConfig,omitempty"`
	ProcessingEndTime      *metav1.Time                 `json:"processingEndTime,omitempty"`
	ProcessingInputs       []*ProcessingInput           `json:"processingInputs,omitempty"`
	ProcessingJobARN       *string                      `json:"processingJobARN,omitempty"`
	ProcessingJobName      *string                      `json:"processingJobName,omitempty"`
	ProcessingJobStatus    *string                      `json:"processingJobStatus,omitempty"`
	ProcessingOutputConfig *ProcessingOutputConfig      `json:"processingOutputConfig,omitempty"`
	ProcessingResources    *ProcessingResources         `json:"processingResources,omitempty"`
	ProcessingStartTime    *metav1.Time                 `json:"processingStartTime,omitempty"`
	RoleARN                *string                      `json:"roleARN,omitempty"`
	StoppingCondition      *ProcessingStoppingCondition `json:"stoppingCondition,omitempty"`
	Tags                   []*Tag                       `json:"tags,omitempty"`
	TrainingJobARN         *string                      `json:"trainingJobARN,omitempty"`
}

type ProcessingOutput struct {
	OutputName *string             `json:"outputName,omitempty"`
	S3Output   *ProcessingS3Output `json:"s3Output,omitempty"`
}

type ProcessingOutputConfig struct {
	KMSKeyID *string             `json:"kmsKeyID,omitempty"`
	Outputs  []*ProcessingOutput `json:"outputs,omitempty"`
}

type ProcessingResources struct {
	ClusterConfig *ProcessingClusterConfig `json:"clusterConfig,omitempty"`
}

type ProcessingS3Input struct {
	LocalPath              *string `json:"localPath,omitempty"`
	S3CompressionType      *string `json:"s3CompressionType,omitempty"`
	S3DataDistributionType *string `json:"s3DataDistributionType,omitempty"`
	S3DataType             *string `json:"s3DataType,omitempty"`
	S3InputMode            *string `json:"s3InputMode,omitempty"`
	S3URI                  *string `json:"s3URI,omitempty"`
}

type ProcessingS3Output struct {
	LocalPath    *string `json:"localPath,omitempty"`
	S3UploadMode *string `json:"s3UploadMode,omitempty"`
	S3URI        *string `json:"s3URI,omitempty"`
}

type ProcessingStoppingCondition struct {
	MaxRuntimeInSeconds *int64 `json:"maxRuntimeInSeconds,omitempty"`
}

type ProductionVariant struct {
	AcceleratorType      *string  `json:"acceleratorType,omitempty"`
	InitialInstanceCount *int64   `json:"initialInstanceCount,omitempty"`
	InitialVariantWeight *float64 `json:"initialVariantWeight,omitempty"`
	InstanceType         *string  `json:"instanceType,omitempty"`
	ModelName            *string  `json:"modelName,omitempty"`
	VariantName          *string  `json:"variantName,omitempty"`
}

type ProductionVariantSummary struct {
	CurrentInstanceCount *int64           `json:"currentInstanceCount,omitempty"`
	CurrentWeight        *float64         `json:"currentWeight,omitempty"`
	DeployedImages       []*DeployedImage `json:"deployedImages,omitempty"`
	DesiredInstanceCount *int64           `json:"desiredInstanceCount,omitempty"`
	DesiredWeight        *float64         `json:"desiredWeight,omitempty"`
	VariantName          *string          `json:"variantName,omitempty"`
}

type PublicWorkforceTaskPrice struct {
	AmountInUsd *USD `json:"amountInUsd,omitempty"`
}

type RenderingError struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type ResolvedAttributes struct {
	AutoMLJobObjective *AutoMLJobObjective          `json:"autoMLJobObjective,omitempty"`
	CompletionCriteria *AutoMLJobCompletionCriteria `json:"completionCriteria,omitempty"`
	ProblemType        *string                      `json:"problemType,omitempty"`
}

type ResourceConfig struct {
	InstanceCount  *int64  `json:"instanceCount,omitempty"`
	InstanceType   *string `json:"instanceType,omitempty"`
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
	VolumeSizeInGB *int64  `json:"volumeSizeInGB,omitempty"`
}

type ResourceLimits struct {
	MaxNumberOfTrainingJobs *int64 `json:"maxNumberOfTrainingJobs,omitempty"`
	MaxParallelTrainingJobs *int64 `json:"maxParallelTrainingJobs,omitempty"`
}

type ResourceSpec struct {
	InstanceType      *string `json:"instanceType,omitempty"`
	SageMakerImageARN *string `json:"sageMakerImageARN,omitempty"`
}

type S3DataSource struct {
	AttributeNames         []*string `json:"attributeNames,omitempty"`
	S3DataDistributionType *string   `json:"s3DataDistributionType,omitempty"`
	S3DataType             *string   `json:"s3DataType,omitempty"`
	S3URI                  *string   `json:"s3URI,omitempty"`
}

type ScheduleConfig struct {
	ScheduleExpression *string `json:"scheduleExpression,omitempty"`
}

type SecondaryStatusTransition struct {
	EndTime       *metav1.Time `json:"endTime,omitempty"`
	StartTime     *metav1.Time `json:"startTime,omitempty"`
	Status        *string      `json:"status,omitempty"`
	StatusMessage *string      `json:"statusMessage,omitempty"`
}

type SharingSettings struct {
	NotebookOutputOption *string `json:"notebookOutputOption,omitempty"`
	S3KMSKeyID           *string `json:"s3KMSKeyID,omitempty"`
	S3OutputPath         *string `json:"s3OutputPath,omitempty"`
}

type ShuffleConfig struct {
	Seed *int64 `json:"seed,omitempty"`
}

type SourceAlgorithm struct {
	AlgorithmName *string `json:"algorithmName,omitempty"`
	ModelDataURL  *string `json:"modelDataURL,omitempty"`
}

type SourceAlgorithmSpecification struct {
	SourceAlgorithms []*SourceAlgorithm `json:"sourceAlgorithms,omitempty"`
}

type SourceIPConfig struct {
	CIDRs []*string `json:"cidrs,omitempty"`
}

type StoppingCondition struct {
	MaxRuntimeInSeconds  *int64 `json:"maxRuntimeInSeconds,omitempty"`
	MaxWaitTimeInSeconds *int64 `json:"maxWaitTimeInSeconds,omitempty"`
}

type SubscribedWorkteam struct {
	ListingID              *string `json:"listingID,omitempty"`
	MarketplaceDescription *string `json:"marketplaceDescription,omitempty"`
	MarketplaceTitle       *string `json:"marketplaceTitle,omitempty"`
	SellerName             *string `json:"sellerName,omitempty"`
	WorkteamARN            *string `json:"workteamARN,omitempty"`
}

type Tag struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

type TargetPlatform struct {
	Accelerator *string `json:"accelerator,omitempty"`
	Arch        *string `json:"arch,omitempty"`
	Os          *string `json:"os,omitempty"`
}

type TensorBoardAppSettings struct {
	DefaultResourceSpec *ResourceSpec `json:"defaultResourceSpec,omitempty"`
}

type TensorBoardOutputConfig struct {
	LocalPath    *string `json:"localPath,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type TrainingJobDefinition struct {
	HyperParameters   map[string]*string `json:"hyperParameters,omitempty"`
	InputDataConfig   []*Channel         `json:"inputDataConfig,omitempty"`
	OutputDataConfig  *OutputDataConfig  `json:"outputDataConfig,omitempty"`
	ResourceConfig    *ResourceConfig    `json:"resourceConfig,omitempty"`
	StoppingCondition *StoppingCondition `json:"stoppingCondition,omitempty"`
	TrainingInputMode *string            `json:"trainingInputMode,omitempty"`
}

type TrainingJobStatusCounters struct {
	Completed         *int64 `json:"completed,omitempty"`
	InProgress        *int64 `json:"inProgress,omitempty"`
	NonRetryableError *int64 `json:"nonRetryableError,omitempty"`
	RetryableError    *int64 `json:"retryableError,omitempty"`
	Stopped           *int64 `json:"stopped,omitempty"`
}

type TrainingJobSummary struct {
	CreationTime      *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime  *metav1.Time `json:"lastModifiedTime,omitempty"`
	TrainingEndTime   *metav1.Time `json:"trainingEndTime,omitempty"`
	TrainingJobARN    *string      `json:"trainingJobARN,omitempty"`
	TrainingJobName   *string      `json:"trainingJobName,omitempty"`
	TrainingJobStatus *string      `json:"trainingJobStatus,omitempty"`
}

type TrainingJob_SDK struct {
	AlgorithmSpecification                *AlgorithmSpecification      `json:"algorithmSpecification,omitempty"`
	AutoMLJobARN                          *string                      `json:"autoMLJobARN,omitempty"`
	BillableTimeInSeconds                 *int64                       `json:"billableTimeInSeconds,omitempty"`
	CheckpointConfig                      *CheckpointConfig            `json:"checkpointConfig,omitempty"`
	CreationTime                          *metav1.Time                 `json:"creationTime,omitempty"`
	DebugHookConfig                       *DebugHookConfig             `json:"debugHookConfig,omitempty"`
	DebugRuleConfigurations               []*DebugRuleConfiguration    `json:"debugRuleConfigurations,omitempty"`
	DebugRuleEvaluationStatuses           []*DebugRuleEvaluationStatus `json:"debugRuleEvaluationStatuses,omitempty"`
	EnableInterContainerTrafficEncryption *bool                        `json:"enableInterContainerTrafficEncryption,omitempty"`
	EnableManagedSpotTraining             *bool                        `json:"enableManagedSpotTraining,omitempty"`
	EnableNetworkIsolation                *bool                        `json:"enableNetworkIsolation,omitempty"`
	ExperimentConfig                      *ExperimentConfig            `json:"experimentConfig,omitempty"`
	FailureReason                         *string                      `json:"failureReason,omitempty"`
	FinalMetricDataList                   []*MetricData                `json:"finalMetricDataList,omitempty"`
	HyperParameters                       map[string]*string           `json:"hyperParameters,omitempty"`
	InputDataConfig                       []*Channel                   `json:"inputDataConfig,omitempty"`
	LabelingJobARN                        *string                      `json:"labelingJobARN,omitempty"`
	LastModifiedTime                      *metav1.Time                 `json:"lastModifiedTime,omitempty"`
	ModelArtifacts                        *ModelArtifacts              `json:"modelArtifacts,omitempty"`
	OutputDataConfig                      *OutputDataConfig            `json:"outputDataConfig,omitempty"`
	ResourceConfig                        *ResourceConfig              `json:"resourceConfig,omitempty"`
	RoleARN                               *string                      `json:"roleARN,omitempty"`
	SecondaryStatus                       *string                      `json:"secondaryStatus,omitempty"`
	SecondaryStatusTransitions            []*SecondaryStatusTransition `json:"secondaryStatusTransitions,omitempty"`
	StoppingCondition                     *StoppingCondition           `json:"stoppingCondition,omitempty"`
	Tags                                  []*Tag                       `json:"tags,omitempty"`
	TensorBoardOutputConfig               *TensorBoardOutputConfig     `json:"tensorBoardOutputConfig,omitempty"`
	TrainingEndTime                       *metav1.Time                 `json:"trainingEndTime,omitempty"`
	TrainingJobARN                        *string                      `json:"trainingJobARN,omitempty"`
	TrainingJobName                       *string                      `json:"trainingJobName,omitempty"`
	TrainingJobStatus                     *string                      `json:"trainingJobStatus,omitempty"`
	TrainingStartTime                     *metav1.Time                 `json:"trainingStartTime,omitempty"`
	TrainingTimeInSeconds                 *int64                       `json:"trainingTimeInSeconds,omitempty"`
	TuningJobARN                          *string                      `json:"tuningJobARN,omitempty"`
	VPCConfig                             *VPCConfig                   `json:"vpcConfig,omitempty"`
}

type TrainingSpecification struct {
	MetricDefinitions                  []*MetricDefinition                 `json:"metricDefinitions,omitempty"`
	SupportedHyperParameters           []*HyperParameterSpecification      `json:"supportedHyperParameters,omitempty"`
	SupportedTrainingInstanceTypes     []*string                           `json:"supportedTrainingInstanceTypes,omitempty"`
	SupportedTuningJobObjectiveMetrics []*HyperParameterTuningJobObjective `json:"supportedTuningJobObjectiveMetrics,omitempty"`
	SupportsDistributedTraining        *bool                               `json:"supportsDistributedTraining,omitempty"`
	TrainingChannels                   []*ChannelSpecification             `json:"trainingChannels,omitempty"`
	TrainingImage                      *string                             `json:"trainingImage,omitempty"`
	TrainingImageDigest                *string                             `json:"trainingImageDigest,omitempty"`
}

type TransformDataSource struct {
	S3DataSource *TransformS3DataSource `json:"s3DataSource,omitempty"`
}

type TransformInput struct {
	CompressionType *string              `json:"compressionType,omitempty"`
	ContentType     *string              `json:"contentType,omitempty"`
	DataSource      *TransformDataSource `json:"dataSource,omitempty"`
	SplitType       *string              `json:"splitType,omitempty"`
}

type TransformJobDefinition struct {
	BatchStrategy           *string             `json:"batchStrategy,omitempty"`
	Environment             map[string]*string  `json:"environment,omitempty"`
	MaxConcurrentTransforms *int64              `json:"maxConcurrentTransforms,omitempty"`
	MaxPayloadInMB          *int64              `json:"maxPayloadInMB,omitempty"`
	TransformInput          *TransformInput     `json:"transformInput,omitempty"`
	TransformOutput         *TransformOutput    `json:"transformOutput,omitempty"`
	TransformResources      *TransformResources `json:"transformResources,omitempty"`
}

type TransformJobSummary struct {
	CreationTime       *metav1.Time `json:"creationTime,omitempty"`
	FailureReason      *string      `json:"failureReason,omitempty"`
	LastModifiedTime   *metav1.Time `json:"lastModifiedTime,omitempty"`
	TransformEndTime   *metav1.Time `json:"transformEndTime,omitempty"`
	TransformJobARN    *string      `json:"transformJobARN,omitempty"`
	TransformJobName   *string      `json:"transformJobName,omitempty"`
	TransformJobStatus *string      `json:"transformJobStatus,omitempty"`
}

type TransformJob_SDK struct {
	AutoMLJobARN            *string             `json:"autoMLJobARN,omitempty"`
	BatchStrategy           *string             `json:"batchStrategy,omitempty"`
	CreationTime            *metav1.Time        `json:"creationTime,omitempty"`
	DataProcessing          *DataProcessing     `json:"dataProcessing,omitempty"`
	Environment             map[string]*string  `json:"environment,omitempty"`
	ExperimentConfig        *ExperimentConfig   `json:"experimentConfig,omitempty"`
	FailureReason           *string             `json:"failureReason,omitempty"`
	LabelingJobARN          *string             `json:"labelingJobARN,omitempty"`
	MaxConcurrentTransforms *int64              `json:"maxConcurrentTransforms,omitempty"`
	MaxPayloadInMB          *int64              `json:"maxPayloadInMB,omitempty"`
	ModelClientConfig       *ModelClientConfig  `json:"modelClientConfig,omitempty"`
	ModelName               *string             `json:"modelName,omitempty"`
	Tags                    []*Tag              `json:"tags,omitempty"`
	TransformEndTime        *metav1.Time        `json:"transformEndTime,omitempty"`
	TransformInput          *TransformInput     `json:"transformInput,omitempty"`
	TransformJobARN         *string             `json:"transformJobARN,omitempty"`
	TransformJobName        *string             `json:"transformJobName,omitempty"`
	TransformJobStatus      *string             `json:"transformJobStatus,omitempty"`
	TransformOutput         *TransformOutput    `json:"transformOutput,omitempty"`
	TransformResources      *TransformResources `json:"transformResources,omitempty"`
	TransformStartTime      *metav1.Time        `json:"transformStartTime,omitempty"`
}

type TransformOutput struct {
	Accept       *string `json:"accept,omitempty"`
	AssembleWith *string `json:"assembleWith,omitempty"`
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type TransformResources struct {
	InstanceCount  *int64  `json:"instanceCount,omitempty"`
	InstanceType   *string `json:"instanceType,omitempty"`
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
}

type TransformS3DataSource struct {
	S3DataType *string `json:"s3DataType,omitempty"`
	S3URI      *string `json:"s3URI,omitempty"`
}

type TrialComponentArtifact struct {
	MediaType *string `json:"mediaType,omitempty"`
	Value     *string `json:"value,omitempty"`
}

type TrialComponentMetricSummary struct {
	Avg        *float64     `json:"avg,omitempty"`
	Count      *int64       `json:"count,omitempty"`
	Last       *float64     `json:"last,omitempty"`
	Max        *float64     `json:"max,omitempty"`
	MetricName *string      `json:"metricName,omitempty"`
	Min        *float64     `json:"min,omitempty"`
	SourceARN  *string      `json:"sourceARN,omitempty"`
	StdDev     *float64     `json:"stdDev,omitempty"`
	TimeStamp  *metav1.Time `json:"timeStamp,omitempty"`
}

type TrialComponentParameterValue struct {
	NumberValue *float64 `json:"numberValue,omitempty"`
	StringValue *string  `json:"stringValue,omitempty"`
}

type TrialComponentSimpleSummary struct {
	CreatedBy            *UserContext          `json:"createdBy,omitempty"`
	CreationTime         *metav1.Time          `json:"creationTime,omitempty"`
	TrialComponentARN    *string               `json:"trialComponentARN,omitempty"`
	TrialComponentName   *string               `json:"trialComponentName,omitempty"`
	TrialComponentSource *TrialComponentSource `json:"trialComponentSource,omitempty"`
}

type TrialComponentSource struct {
	SourceARN  *string `json:"sourceARN,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
}

type TrialComponentSourceDetail struct {
	SourceARN *string `json:"sourceARN,omitempty"`
}

type TrialComponentStatus_SDK struct {
	Message       *string `json:"message,omitempty"`
	PrimaryStatus *string `json:"primaryStatus,omitempty"`
}

type TrialComponentSummary struct {
	CreatedBy            *UserContext              `json:"createdBy,omitempty"`
	CreationTime         *metav1.Time              `json:"creationTime,omitempty"`
	DisplayName          *string                   `json:"displayName,omitempty"`
	EndTime              *metav1.Time              `json:"endTime,omitempty"`
	LastModifiedBy       *UserContext              `json:"lastModifiedBy,omitempty"`
	LastModifiedTime     *metav1.Time              `json:"lastModifiedTime,omitempty"`
	StartTime            *metav1.Time              `json:"startTime,omitempty"`
	Status               *TrialComponentStatus_SDK `json:"status,omitempty"`
	TrialComponentARN    *string                   `json:"trialComponentARN,omitempty"`
	TrialComponentName   *string                   `json:"trialComponentName,omitempty"`
	TrialComponentSource *TrialComponentSource     `json:"trialComponentSource,omitempty"`
}

type TrialComponent_SDK struct {
	CreatedBy          *UserContext                               `json:"createdBy,omitempty"`
	CreationTime       *metav1.Time                               `json:"creationTime,omitempty"`
	DisplayName        *string                                    `json:"displayName,omitempty"`
	EndTime            *metav1.Time                               `json:"endTime,omitempty"`
	InputArtifacts     []map[string]*TrialComponentArtifact       `json:"inputArtifacts,omitempty"`
	LastModifiedBy     *UserContext                               `json:"lastModifiedBy,omitempty"`
	LastModifiedTime   *metav1.Time                               `json:"lastModifiedTime,omitempty"`
	Metrics            []*TrialComponentMetricSummary             `json:"metrics,omitempty"`
	OutputArtifacts    []map[string]*TrialComponentArtifact       `json:"outputArtifacts,omitempty"`
	Parameters         []map[string]*TrialComponentParameterValue `json:"parameters,omitempty"`
	Source             *TrialComponentSource                      `json:"source,omitempty"`
	StartTime          *metav1.Time                               `json:"startTime,omitempty"`
	Status             *TrialComponentStatus_SDK                  `json:"status,omitempty"`
	Tags               []*Tag                                     `json:"tags,omitempty"`
	TrialComponentARN  *string                                    `json:"trialComponentARN,omitempty"`
	TrialComponentName *string                                    `json:"trialComponentName,omitempty"`
}

type TrialSource struct {
	SourceARN  *string `json:"sourceARN,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
}

type TrialSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	DisplayName      *string      `json:"displayName,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	TrialARN         *string      `json:"trialARN,omitempty"`
	TrialName        *string      `json:"trialName,omitempty"`
	TrialSource      *TrialSource `json:"trialSource,omitempty"`
}

type Trial_SDK struct {
	CreatedBy        *UserContext `json:"createdBy,omitempty"`
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	DisplayName      *string      `json:"displayName,omitempty"`
	ExperimentName   *string      `json:"experimentName,omitempty"`
	LastModifiedBy   *UserContext `json:"lastModifiedBy,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	Source           *TrialSource `json:"source,omitempty"`
	Tags             []*Tag       `json:"tags,omitempty"`
	TrialARN         *string      `json:"trialARN,omitempty"`
	TrialName        *string      `json:"trialName,omitempty"`
}

type TuningJobCompletionCriteria struct {
	TargetObjectiveMetricValue *float64 `json:"targetObjectiveMetricValue,omitempty"`
}

type USD struct {
	Cents                 *int64 `json:"cents,omitempty"`
	Dollars               *int64 `json:"dollars,omitempty"`
	TenthFractionsOfACent *int64 `json:"tenthFractionsOfACent,omitempty"`
}

type UiConfig struct {
	HumanTaskUiARN  *string `json:"humanTaskUiARN,omitempty"`
	UiTemplateS3URI *string `json:"uiTemplateS3URI,omitempty"`
}

type UiTemplate struct {
	Content *string `json:"content,omitempty"`
}

type UiTemplateInfo struct {
	ContentSha256 *string `json:"contentSha256,omitempty"`
	URL           *string `json:"url,omitempty"`
}

type UserContext struct {
	DomainID        *string `json:"domainID,omitempty"`
	UserProfileARN  *string `json:"userProfileARN,omitempty"`
	UserProfileName *string `json:"userProfileName,omitempty"`
}

type UserProfileDetails struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	DomainID         *string      `json:"domainID,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	Status           *string      `json:"status,omitempty"`
	UserProfileName  *string      `json:"userProfileName,omitempty"`
}

type UserSettings struct {
	ExecutionRole            *string                   `json:"executionRole,omitempty"`
	JupyterServerAppSettings *JupyterServerAppSettings `json:"jupyterServerAppSettings,omitempty"`
	KernelGatewayAppSettings *KernelGatewayAppSettings `json:"kernelGatewayAppSettings,omitempty"`
	SecurityGroups           []*string                 `json:"securityGroups,omitempty"`
	SharingSettings          *SharingSettings          `json:"sharingSettings,omitempty"`
	TensorBoardAppSettings   *TensorBoardAppSettings   `json:"tensorBoardAppSettings,omitempty"`
}

type VPCConfig struct {
	SecurityGroupIDs []*string `json:"securityGroupIDs,omitempty"`
	Subnets          []*string `json:"subnets,omitempty"`
}

type VariantProperty struct {
	VariantPropertyType *string `json:"variantPropertyType,omitempty"`
}

type Workforce_SDK struct {
	CognitoConfig   *CognitoConfig         `json:"cognitoConfig,omitempty"`
	CreateDate      *metav1.Time           `json:"createDate,omitempty"`
	LastUpdatedDate *metav1.Time           `json:"lastUpdatedDate,omitempty"`
	OidcConfig      *OidcConfigForResponse `json:"oidcConfig,omitempty"`
	SourceIPConfig  *SourceIPConfig        `json:"sourceIPConfig,omitempty"`
	SubDomain       *string                `json:"subDomain,omitempty"`
	WorkforceARN    *string                `json:"workforceARN,omitempty"`
	WorkforceName   *string                `json:"workforceName,omitempty"`
}

type Workteam_SDK struct {
	CreateDate                *metav1.Time               `json:"createDate,omitempty"`
	Description               *string                    `json:"description,omitempty"`
	LastUpdatedDate           *metav1.Time               `json:"lastUpdatedDate,omitempty"`
	MemberDefinitions         []*MemberDefinition        `json:"memberDefinitions,omitempty"`
	NotificationConfiguration *NotificationConfiguration `json:"notificationConfiguration,omitempty"`
	ProductListingIDs         []*string                  `json:"productListingIDs,omitempty"`
	SubDomain                 *string                    `json:"subDomain,omitempty"`
	WorkforceARN              *string                    `json:"workforceARN,omitempty"`
	WorkteamARN               *string                    `json:"workteamARN,omitempty"`
	WorkteamName              *string                    `json:"workteamName,omitempty"`
}
